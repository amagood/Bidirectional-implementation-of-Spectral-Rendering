//
// Created by amagood on 2020/4/21.
//

#include "Color.h"
#include <cmath>

#define CLAMP0255_XY(x, y) (((x) < 0) ? 0 : ((x) > (y) ? (y) : (x)))

double cauchyRefractionIndex(double lambda, double B, double C)
{
    return  B + C / pow(lambda, 2.0);
}


void RGB2XYZ(float R, float G, float B, float *X, float *Y, float *Z)
{
    *X = 0.412453f * R + 0.357580f * G + 0.180423f * B;
    *Y = 0.212671f * R + 0.715160f * G + 0.072169f * B;
    *Z = 0.019334f * R + 0.119193f * G + 0.950227f * B;
}


void XYZ2RGB(float X, float Y, float Z, float *R, float *G, float *B)
{
    float RR, GG, BB;
    RR =  3.240479f * X - 1.537150f * Y - 0.498535f * Z;
    GG = -0.969256f * X + 1.875992f * Y + 0.041556f * Z;
    BB =  0.055648f * X - 0.204043f * Y + 1.057311f * Z;

    *R = CLAMP0255_XY(RR, 1.0f);
    *G = CLAMP0255_XY(GG, 1.0f);
    *B = CLAMP0255_XY(BB, 1.0f);
}

spectralTable::spectralTable()
{
    data[380] = vec3(0.0014, 0.0000, 0.0065);
    data[381] = vec3(0.0015, 0.0000, 0.0070);
    data[382] = vec3(0.0016, 0.0000, 0.0077);
    data[383] = vec3(0.0018, 0.0001, 0.0085);
    data[384] = vec3(0.0020, 0.0001, 0.0094);
    data[385] = vec3(0.0022, 0.0001, 0.0105);
    data[386] = vec3(0.0025, 0.0001, 0.0120);
    data[387] = vec3(0.0029, 0.0001, 0.0136);
    data[388] = vec3(0.0033, 0.0001, 0.0155);
    data[389] = vec3(0.0037, 0.0001, 0.0177);
    data[390] = vec3(0.0042, 0.0001, 0.0201);
    data[391] = vec3(0.0048, 0.0001, 0.0225);
    data[392] = vec3(0.0053, 0.0002, 0.0252);
    data[393] = vec3(0.0060, 0.0002, 0.0284);
    data[394] = vec3(0.0068, 0.0002, 0.0320);
    data[395] = vec3(0.0077, 0.0002, 0.0362);
    data[396] = vec3(0.0088, 0.0002, 0.0415);
    data[397] = vec3(0.0100, 0.0003, 0.0473);
    data[398] = vec3(0.0113, 0.0003, 0.0536);
    data[399] = vec3(0.0128, 0.0004, 0.0605);
    data[400] = vec3(0.0143, 0.0004, 0.0679);
    data[401] = vec3(0.0156, 0.0004, 0.0741);
    data[402] = vec3(0.0171, 0.0005, 0.0810);
    data[403] = vec3(0.0188, 0.0005, 0.0891);
    data[404] = vec3(0.0208, 0.0006, 0.0988);
    data[405] = vec3(0.0232, 0.0006, 0.1102);
    data[406] = vec3(0.0263, 0.0007, 0.1249);
    data[407] = vec3(0.0298, 0.0008, 0.1418);
    data[408] = vec3(0.0339, 0.0009, 0.1612);
    data[409] = vec3(0.0384, 0.0011, 0.1830);
    data[410] = vec3(0.0435, 0.0012, 0.2074);
    data[411] = vec3(0.0489, 0.0014, 0.2334);
    data[412] = vec3(0.0550, 0.0015, 0.2625);
    data[413] = vec3(0.0618, 0.0017, 0.2949);
    data[414] = vec3(0.0693, 0.0019, 0.3311);
    data[415] = vec3(0.0776, 0.0022, 0.3713);
    data[416] = vec3(0.0871, 0.0025, 0.4170);
    data[417] = vec3(0.0976, 0.0028, 0.4673);
    data[418] = vec3(0.1089, 0.0031, 0.5221);
    data[419] = vec3(0.1212, 0.0035, 0.5815);
    data[420] = vec3(0.1344, 0.0040, 0.6456);
    data[421] = vec3(0.1497, 0.0046, 0.7201);
    data[422] = vec3(0.1657, 0.0052, 0.7980);
    data[423] = vec3(0.1820, 0.0058, 0.8780);
    data[424] = vec3(0.1985, 0.0065, 0.9588);
    data[425] = vec3(0.2148, 0.0073, 1.0391);
    data[426] = vec3(0.2299, 0.0081, 1.1141);
    data[427] = vec3(0.2445, 0.0089, 1.1868);
    data[428] = vec3(0.2584, 0.0098, 1.2566);
    data[429] = vec3(0.2716, 0.0107, 1.3230);
    data[430] = vec3(0.2839, 0.0116, 1.3856);
    data[431] = vec3(0.2948, 0.0126, 1.4419);
    data[432] = vec3(0.3047, 0.0136, 1.4939);
    data[433] = vec3(0.3136, 0.0146, 1.5414);
    data[434] = vec3(0.3216, 0.0157, 1.5844);
    data[435] = vec3(0.3285, 0.0168, 1.6230);
    data[436] = vec3(0.3343, 0.0180, 1.6561);
    data[437] = vec3(0.3391, 0.0192, 1.6848);
    data[438] = vec3(0.3430, 0.0204, 1.7094);
    data[439] = vec3(0.3461, 0.0217, 1.7301);
    data[440] = vec3(0.3483, 0.0230, 1.7471);
    data[441] = vec3(0.3496, 0.0243, 1.7599);
    data[442] = vec3(0.3501, 0.0256, 1.7695);
    data[443] = vec3(0.3500, 0.0270, 1.7763);
    data[444] = vec3(0.3493, 0.0284, 1.7805);
    data[445] = vec3(0.3481, 0.0298, 1.7826);
    data[446] = vec3(0.3464, 0.0313, 1.7833);
    data[447] = vec3(0.3444, 0.0329, 1.7823);
    data[448] = vec3(0.3420, 0.0345, 1.7800);
    data[449] = vec3(0.3392, 0.0362, 1.7765);
    data[450] = vec3(0.3362, 0.0380, 1.7721);
    data[451] = vec3(0.3333, 0.0398, 1.7688);
    data[452] = vec3(0.3301, 0.0418, 1.7647);
    data[453] = vec3(0.3267, 0.0438, 1.7593);
    data[454] = vec3(0.3229, 0.0458, 1.7525);
    data[455] = vec3(0.3187, 0.0480, 1.7441);
    data[456] = vec3(0.3140, 0.0502, 1.7335);
    data[457] = vec3(0.3089, 0.0526, 1.7208);
    data[458] = vec3(0.3033, 0.0550, 1.7060);
    data[459] = vec3(0.2973, 0.0574, 1.6889);
    data[460] = vec3(0.2908, 0.0600, 1.6692);
    data[461] = vec3(0.2839, 0.0626, 1.6473);
    data[462] = vec3(0.2766, 0.0653, 1.6226);
    data[463] = vec3(0.2687, 0.0680, 1.5946);
    data[464] = vec3(0.2602, 0.0709, 1.5632);
    data[465] = vec3(0.2511, 0.0739, 1.5281);
    data[466] = vec3(0.2406, 0.0770, 1.4849);
    data[467] = vec3(0.2297, 0.0803, 1.4386);
    data[468] = vec3(0.2184, 0.0837, 1.3897);
    data[469] = vec3(0.2069, 0.0872, 1.3392);
    data[470] = vec3(0.1954, 0.0910, 1.2876);
    data[471] = vec3(0.1844, 0.0949, 1.2382);
    data[472] = vec3(0.1735, 0.0991, 1.1887);
    data[473] = vec3(0.1628, 0.1034, 1.1394);
    data[474] = vec3(0.1523, 0.1079, 1.0904);
    data[475] = vec3(0.1421, 0.1126, 1.0419);
    data[476] = vec3(0.1322, 0.1175, 0.9943);
    data[477] = vec3(0.1226, 0.1226, 0.9474);
    data[478] = vec3(0.1133, 0.1279, 0.9015);
    data[479] = vec3(0.1043, 0.1334, 0.8567);
    data[480] = vec3(0.0956, 0.1390, 0.8130);
    data[481] = vec3(0.0873, 0.1446, 0.7706);
    data[482] = vec3(0.0793, 0.1504, 0.7296);
    data[483] = vec3(0.0718, 0.1564, 0.6902);
    data[484] = vec3(0.0646, 0.1627, 0.6523);
    data[485] = vec3(0.0580, 0.1693, 0.6162);
    data[486] = vec3(0.0519, 0.1763, 0.5825);
    data[487] = vec3(0.0463, 0.1836, 0.5507);
    data[488] = vec3(0.0412, 0.1913, 0.5205);
    data[489] = vec3(0.0364, 0.1994, 0.4920);
    data[490] = vec3(0.0320, 0.2080, 0.4652);
    data[491] = vec3(0.0279, 0.2171, 0.4399);
    data[492] = vec3(0.0241, 0.2267, 0.4162);
    data[493] = vec3(0.0207, 0.2368, 0.3939);
    data[494] = vec3(0.0175, 0.2474, 0.3730);
    data[495] = vec3(0.0147, 0.2586, 0.3533);
    data[496] = vec3(0.0121, 0.2702, 0.3349);
    data[497] = vec3(0.0099, 0.2824, 0.3176);
    data[498] = vec3(0.0079, 0.2952, 0.3014);
    data[499] = vec3(0.0063, 0.3087, 0.2862);
    data[500] = vec3(0.0049, 0.3230, 0.2720);
    data[501] = vec3(0.0037, 0.3385, 0.2588);
    data[502] = vec3(0.0029, 0.3548, 0.2464);
    data[503] = vec3(0.0024, 0.3717, 0.2346);
    data[504] = vec3(0.0022, 0.3893, 0.2233);
    data[505] = vec3(0.0024, 0.4073, 0.2123);
    data[506] = vec3(0.0029, 0.4256, 0.2010);
    data[507] = vec3(0.0038, 0.4443, 0.1899);
    data[508] = vec3(0.0052, 0.4635, 0.1790);
    data[509] = vec3(0.0070, 0.4830, 0.1685);
    data[510] = vec3(0.0093, 0.5030, 0.1582);
    data[511] = vec3(0.0122, 0.5237, 0.1481);
    data[512] = vec3(0.0156, 0.5447, 0.1384);
    data[513] = vec3(0.0195, 0.5658, 0.1290);
    data[514] = vec3(0.0240, 0.5870, 0.1201);
    data[515] = vec3(0.0291, 0.6082, 0.1117);
    data[516] = vec3(0.0349, 0.6293, 0.1040);
    data[517] = vec3(0.0412, 0.6502, 0.0968);
    data[518] = vec3(0.0480, 0.6707, 0.0901);
    data[519] = vec3(0.0554, 0.6906, 0.0839);
    data[520] = vec3(0.0633, 0.7100, 0.0782);
    data[521] = vec3(0.0716, 0.7280, 0.0733);
    data[522] = vec3(0.0805, 0.7453, 0.0687);
    data[523] = vec3(0.0898, 0.7619, 0.0646);
    data[524] = vec3(0.0995, 0.7778, 0.0608);
    data[525] = vec3(0.1096, 0.7932, 0.0573);
    data[526] = vec3(0.1202, 0.8082, 0.0539);
    data[527] = vec3(0.1311, 0.8225, 0.0507);
    data[528] = vec3(0.1423, 0.8363, 0.0477);
    data[529] = vec3(0.1538, 0.8495, 0.0449);
    data[530] = vec3(0.1655, 0.8620, 0.0422);
    data[531] = vec3(0.1772, 0.8738, 0.0395);
    data[532] = vec3(0.1891, 0.8849, 0.0369);
    data[533] = vec3(0.2011, 0.8955, 0.0344);
    data[534] = vec3(0.2133, 0.9054, 0.0321);
    data[535] = vec3(0.2257, 0.9149, 0.0298);
    data[536] = vec3(0.2383, 0.9237, 0.0277);
    data[537] = vec3(0.2511, 0.9321, 0.0257);
    data[538] = vec3(0.2640, 0.9399, 0.0238);
    data[539] = vec3(0.2771, 0.9472, 0.0220);
    data[540] = vec3(0.2904, 0.9540, 0.0203);
    data[541] = vec3(0.3039, 0.9602, 0.0187);
    data[542] = vec3(0.3176, 0.9660, 0.0172);
    data[543] = vec3(0.3314, 0.9712, 0.0159);
    data[544] = vec3(0.3455, 0.9760, 0.0146);
    data[545] = vec3(0.3597, 0.9803, 0.0134);
    data[546] = vec3(0.3741, 0.9841, 0.0123);
    data[547] = vec3(0.3886, 0.9874, 0.0113);
    data[548] = vec3(0.4034, 0.9904, 0.0104);
    data[549] = vec3(0.4183, 0.9929, 0.0095);
    data[550] = vec3(0.4334, 0.9950, 0.0087);
    data[551] = vec3(0.4488, 0.9967, 0.0080);
    data[552] = vec3(0.4644, 0.9981, 0.0074);
    data[553] = vec3(0.4801, 0.9992, 0.0068);
    data[554] = vec3(0.4960, 0.9998, 0.0062);
    data[555] = vec3(0.5121, 1.0000, 0.0057);
    data[556] = vec3(0.5283, 0.9998, 0.0053);
    data[557] = vec3(0.5447, 0.9993, 0.0049);
    data[558] = vec3(0.5612, 0.9983, 0.0045);
    data[559] = vec3(0.5778, 0.9969, 0.0042);
    data[560] = vec3(0.5945, 0.9950, 0.0039);
    data[561] = vec3(0.6112, 0.9926, 0.0036);
    data[562] = vec3(0.6280, 0.9897, 0.0034);
    data[563] = vec3(0.6448, 0.9865, 0.0031);
    data[564] = vec3(0.6616, 0.9827, 0.0029);
    data[565] = vec3(0.6784, 0.9786, 0.0027);
    data[566] = vec3(0.6953, 0.9741, 0.0026);
    data[567] = vec3(0.7121, 0.9692, 0.0024);
    data[568] = vec3(0.7288, 0.9639, 0.0023);
    data[569] = vec3(0.7455, 0.9581, 0.0022);
    data[570] = vec3(0.7621, 0.9520, 0.0021);
    data[571] = vec3(0.7785, 0.9454, 0.0020);
    data[572] = vec3(0.7948, 0.9385, 0.0019);
    data[573] = vec3(0.8109, 0.9312, 0.0019);
    data[574] = vec3(0.8268, 0.9235, 0.0018);
    data[575] = vec3(0.8425, 0.9154, 0.0018);
    data[576] = vec3(0.8579, 0.9070, 0.0018);
    data[577] = vec3(0.8731, 0.8983, 0.0017);
    data[578] = vec3(0.8879, 0.8892, 0.0017);
    data[579] = vec3(0.9023, 0.8798, 0.0017);
    data[580] = vec3(0.9163, 0.8700, 0.0017);
    data[581] = vec3(0.9298, 0.8598, 0.0016);
    data[582] = vec3(0.9428, 0.8494, 0.0016);
    data[583] = vec3(0.9553, 0.8386, 0.0015);
    data[584] = vec3(0.9672, 0.8276, 0.0015);
    data[585] = vec3(0.9786, 0.8163, 0.0014);
    data[586] = vec3(0.9894, 0.8048, 0.0013);
    data[587] = vec3(0.9996, 0.7931, 0.0013);
    data[588] = vec3(1.0091, 0.7812, 0.0012);
    data[589] = vec3(1.0181, 0.7692, 0.0012);
    data[590] = vec3(1.0263, 0.7570, 0.0011);
    data[591] = vec3(1.0340, 0.7448, 0.0011);
    data[592] = vec3(1.0410, 0.7324, 0.0011);
    data[593] = vec3(1.0471, 0.7200, 0.0010);
    data[594] = vec3(1.0524, 0.7075, 0.0010);
    data[595] = vec3(1.0567, 0.6949, 0.0010);
    data[596] = vec3(1.0597, 0.6822, 0.0010);
    data[597] = vec3(1.0617, 0.6695, 0.0009);
    data[598] = vec3(1.0628, 0.6567, 0.0009);
    data[599] = vec3(1.0630, 0.6439, 0.0008);
    data[600] = vec3(1.0622, 0.6310, 0.0008);
    data[601] = vec3(1.0608, 0.6182, 0.0008);
    data[602] = vec3(1.0585, 0.6053, 0.0007);
    data[603] = vec3(1.0552, 0.5925, 0.0007);
    data[604] = vec3(1.0509, 0.5796, 0.0006);
    data[605] = vec3(1.0456, 0.5668, 0.0006);
    data[606] = vec3(1.0389, 0.5540, 0.0005);
    data[607] = vec3(1.0313, 0.5411, 0.0005);
    data[608] = vec3(1.0226, 0.5284, 0.0004);
    data[609] = vec3(1.0131, 0.5157, 0.0004);
    data[610] = vec3(1.0026, 0.5030, 0.0003);
    data[611] = vec3(0.9914, 0.4905, 0.0003);
    data[612] = vec3(0.9794, 0.4781, 0.0003);
    data[613] = vec3(0.9665, 0.4657, 0.0003);
    data[614] = vec3(0.9529, 0.4534, 0.0003);
    data[615] = vec3(0.9384, 0.4412, 0.0002);
    data[616] = vec3(0.9232, 0.4291, 0.0002);
    data[617] = vec3(0.9072, 0.4170, 0.0002);
    data[618] = vec3(0.8904, 0.4050, 0.0002);
    data[619] = vec3(0.8728, 0.3930, 0.0002);
    data[620] = vec3(0.8544, 0.3810, 0.0002);
    data[621] = vec3(0.8349, 0.3689, 0.0002);
    data[622] = vec3(0.8148, 0.3568, 0.0002);
    data[623] = vec3(0.7941, 0.3447, 0.0001);
    data[624] = vec3(0.7729, 0.3328, 0.0001);
    data[625] = vec3(0.7514, 0.3210, 0.0001);
    data[626] = vec3(0.7296, 0.3094, 0.0001);
    data[627] = vec3(0.7077, 0.2979, 0.0001);
    data[628] = vec3(0.6858, 0.2867, 0.0001);
    data[629] = vec3(0.6640, 0.2757, 0.0001);
    data[630] = vec3(0.6424, 0.2650, 0.0000);
    data[631] = vec3(0.6217, 0.2548, 0.0000);
    data[632] = vec3(0.6013, 0.2450, 0.0000);
    data[633] = vec3(0.5812, 0.2354, 0.0000);
    data[634] = vec3(0.5614, 0.2261, 0.0000);
    data[635] = vec3(0.5419, 0.2170, 0.0000);
    data[636] = vec3(0.5226, 0.2081, 0.0000);
    data[637] = vec3(0.5035, 0.1995, 0.0000);
    data[638] = vec3(0.4847, 0.1911, 0.0000);
    data[639] = vec3(0.4662, 0.1830, 0.0000);
    data[640] = vec3(0.4479, 0.1750, 0.0000);
    data[641] = vec3(0.4298, 0.1672, 0.0000);
    data[642] = vec3(0.4121, 0.1596, 0.0000);
    data[643] = vec3(0.3946, 0.1523, 0.0000);
    data[644] = vec3(0.3775, 0.1451, 0.0000);
    data[645] = vec3(0.3608, 0.1382, 0.0000);
    data[646] = vec3(0.3445, 0.1315, 0.0000);
    data[647] = vec3(0.3286, 0.1250, 0.0000);
    data[648] = vec3(0.3131, 0.1188, 0.0000);
    data[649] = vec3(0.2980, 0.1128, 0.0000);
    data[650] = vec3(0.2835, 0.1070, 0.0000);
    data[651] = vec3(0.2696, 0.1015, 0.0000);
    data[652] = vec3(0.2562, 0.0962, 0.0000);
    data[653] = vec3(0.2432, 0.0911, 0.0000);
    data[654] = vec3(0.2307, 0.0863, 0.0000);
    data[655] = vec3(0.2187, 0.0816, 0.0000);
    data[656] = vec3(0.2071, 0.0771, 0.0000);
    data[657] = vec3(0.1959, 0.0728, 0.0000);
    data[658] = vec3(0.1852, 0.0687, 0.0000);
    data[659] = vec3(0.1748, 0.0648, 0.0000);
    data[660] = vec3(0.1649, 0.0610, 0.0000);
    data[661] = vec3(0.1554, 0.0574, 0.0000);
    data[662] = vec3(0.1462, 0.0539, 0.0000);
    data[663] = vec3(0.1375, 0.0507, 0.0000);
    data[664] = vec3(0.1291, 0.0475, 0.0000);
    data[665] = vec3(0.1212, 0.0446, 0.0000);
    data[666] = vec3(0.1136, 0.0418, 0.0000);
    data[667] = vec3(0.1065, 0.0391, 0.0000);
    data[668] = vec3(0.0997, 0.0366, 0.0000);
    data[669] = vec3(0.0934, 0.0342, 0.0000);
    data[670] = vec3(0.0874, 0.0320, 0.0000);
    data[671] = vec3(0.0819, 0.0300, 0.0000);
    data[672] = vec3(0.0768, 0.0281, 0.0000);
    data[673] = vec3(0.0721, 0.0263, 0.0000);
    data[674] = vec3(0.0677, 0.0247, 0.0000);
    data[675] = vec3(0.0636, 0.0232, 0.0000);
    data[676] = vec3(0.0598, 0.0218, 0.0000);
    data[677] = vec3(0.0563, 0.0205, 0.0000);
    data[678] = vec3(0.0529, 0.0193, 0.0000);
    data[679] = vec3(0.0498, 0.0181, 0.0000);
    data[680] = vec3(0.0468, 0.0170, 0.0000);
    data[681] = vec3(0.0437, 0.0159, 0.0000);
    data[682] = vec3(0.0408, 0.0148, 0.0000);
    data[683] = vec3(0.0380, 0.0138, 0.0000);
    data[684] = vec3(0.0354, 0.0128, 0.0000);
    data[685] = vec3(0.0329, 0.0119, 0.0000);
    data[686] = vec3(0.0306, 0.0111, 0.0000);
    data[687] = vec3(0.0284, 0.0103, 0.0000);
    data[688] = vec3(0.0264, 0.0095, 0.0000);
    data[689] = vec3(0.0245, 0.0088, 0.0000);
    data[690] = vec3(0.0227, 0.0082, 0.0000);
    data[691] = vec3(0.0211, 0.0076, 0.0000);
    data[692] = vec3(0.0196, 0.0071, 0.0000);
    data[693] = vec3(0.0182, 0.0066, 0.0000);
    data[694] = vec3(0.0170, 0.0061, 0.0000);
    data[695] = vec3(0.0158, 0.0057, 0.0000);
    data[696] = vec3(0.0148, 0.0053, 0.0000);
    data[697] = vec3(0.0138, 0.0050, 0.0000);
    data[698] = vec3(0.0129, 0.0047, 0.0000);
    data[699] = vec3(0.0121, 0.0044, 0.0000);
    data[700] = vec3(0.0114, 0.0041, 0.0000);
    data[701] = vec3(0.0106, 0.0038, 0.0000);
    data[702] = vec3(0.0099, 0.0036, 0.0000);
    data[703] = vec3(0.0093, 0.0034, 0.0000);
    data[704] = vec3(0.0087, 0.0031, 0.0000);
    data[705] = vec3(0.0081, 0.0029, 0.0000);
    data[706] = vec3(0.0076, 0.0027, 0.0000);
    data[707] = vec3(0.0071, 0.0026, 0.0000);
    data[708] = vec3(0.0066, 0.0024, 0.0000);
    data[709] = vec3(0.0062, 0.0022, 0.0000);
    data[710] = vec3(0.0058, 0.0021, 0.0000);
    data[711] = vec3(0.0054, 0.0020, 0.0000);
    data[712] = vec3(0.0051, 0.0018, 0.0000);
    data[713] = vec3(0.0047, 0.0017, 0.0000);
    data[714] = vec3(0.0044, 0.0016, 0.0000);
    data[715] = vec3(0.0041, 0.0015, 0.0000);
    data[716] = vec3(0.0038, 0.0014, 0.0000);
    data[717] = vec3(0.0036, 0.0013, 0.0000);
    data[718] = vec3(0.0033, 0.0012, 0.0000);
    data[719] = vec3(0.0031, 0.0011, 0.0000);
    data[720] = vec3(0.0029, 0.0010, 0.0000);
    data[721] = vec3(0.0027, 0.0010, 0.0000);
    data[722] = vec3(0.0025, 0.0009, 0.0000);
    data[723] = vec3(0.0024, 0.0008, 0.0000);
    data[724] = vec3(0.0022, 0.0008, 0.0000);
    data[725] = vec3(0.0020, 0.0007, 0.0000);
    data[726] = vec3(0.0019, 0.0007, 0.0000);
    data[727] = vec3(0.0018, 0.0006, 0.0000);
    data[728] = vec3(0.0017, 0.0006, 0.0000);
    data[729] = vec3(0.0015, 0.0006, 0.0000);
    data[730] = vec3(0.0014, 0.0005, 0.0000);
    data[731] = vec3(0.0013, 0.0005, 0.0000);
    data[732] = vec3(0.0012, 0.0004, 0.0000);
    data[733] = vec3(0.0012, 0.0004, 0.0000);
    data[734] = vec3(0.0011, 0.0004, 0.0000);
    data[735] = vec3(0.0010, 0.0004, 0.0000);
    data[736] = vec3(0.0009, 0.0003, 0.0000);
    data[737] = vec3(0.0009, 0.0003, 0.0000);
    data[738] = vec3(0.0008, 0.0003, 0.0000);
    data[739] = vec3(0.0007, 0.0003, 0.0000);
    data[740] = vec3(0.0007, 0.0002, 0.0000);
    data[741] = vec3(0.0006, 0.0002, 0.0000);
    data[742] = vec3(0.0006, 0.0002, 0.0000);
    data[743] = vec3(0.0006, 0.0002, 0.0000);
    data[744] = vec3(0.0005, 0.0002, 0.0000);
    data[745] = vec3(0.0005, 0.0002, 0.0000);
    data[746] = vec3(0.0004, 0.0002, 0.0000);
    data[747] = vec3(0.0004, 0.0001, 0.0000);
    data[748] = vec3(0.0004, 0.0001, 0.0000);
    data[749] = vec3(0.0004, 0.0001, 0.0000);
    data[750] = vec3(0.0003, 0.0001, 0.0000);
    data[751] = vec3(0.0003, 0.0001, 0.0000);
    data[752] = vec3(0.0003, 0.0001, 0.0000);
    data[753] = vec3(0.0003, 0.0001, 0.0000);
    data[754] = vec3(0.0003, 0.0001, 0.0000);
    data[755] = vec3(0.0002, 0.0001, 0.0000);
    data[756] = vec3(0.0002, 0.0001, 0.0000);
    data[757] = vec3(0.0002, 0.0001, 0.0000);
    data[758] = vec3(0.0002, 0.0001, 0.0000);
    data[759] = vec3(0.0002, 0.0001, 0.0000);
    data[760] = vec3(0.0002, 0.0001, 0.0000);
    data[761] = vec3(0.0002, 0.0001, 0.0000);
    data[762] = vec3(0.0001, 0.0001, 0.0000);
    data[763] = vec3(0.0001, 0.0000, 0.0000);
    data[764] = vec3(0.0001, 0.0000, 0.0000);
    data[765] = vec3(0.0001, 0.0000, 0.0000);
    data[766] = vec3(0.0001, 0.0000, 0.0000);
    data[767] = vec3(0.0001, 0.0000, 0.0000);
    data[768] = vec3(0.0001, 0.0000, 0.0000);
    data[769] = vec3(0.0001, 0.0000, 0.0000);
    data[770] = vec3(0.0001, 0.0000, 0.0000);
    data[771] = vec3(0.0001, 0.0000, 0.0000);
    data[772] = vec3(0.0001, 0.0000, 0.0000);
    data[773] = vec3(0.0001, 0.0000, 0.0000);
    data[774] = vec3(0.0001, 0.0000, 0.0000);
    data[775] = vec3(0.0001, 0.0000, 0.0000);
    data[776] = vec3(0.0001, 0.0000, 0.0000);
    data[777] = vec3(0.0001, 0.0000, 0.0000);
    data[778] = vec3(0.0000, 0.0000, 0.0000);
    data[779] = vec3(0.0000, 0.0000, 0.0000);
    data[780] = vec3(0.0000, 0.0000, 0.0000);
}

vec3 spectralTable::getRGB(int lambda)
{
    vec3 tmp = data[lambda];
    float r,g,b;
    XYZ2RGB(tmp.x(), tmp.y(), tmp.z(), &r, &g, &b);

    return vec3(r,g,b);
}
